[
    {
        "id": "cmem-plugin-auth",
        "name": "cmem-plugin-auth",
        "description": "# cmem-plugin-auth\n\nAuthenticate to services and provide the OAuth2 access token for other tasks.\n\nThis is a plugin for [eccenca](https://eccenca.com) [Corporate Memory](https://documentation.eccenca.com).\n\nYou can install it with the [cmemc](https://eccenca.com/go/cmemc) command line\nclients like this:\n\n```\ncmemc admin workspace python install cmem-plugin-auth\n```\n\n",
        "latest_version": "2.0.0"
    },
    {
        "id": "cmem-plugin-base",
        "name": "cmem-plugin-base",
        "description": "# cmem-plugin-base\n\nPython base classes for developing eccenca Coporate Memory plugins.\n\nIn order to kick-start developing eccenca Corporate Memory Plugins, please check out this project template: https://github.com/eccenca/cmem-plugin-template\n\n",
        "latest_version": "4.8.0"
    },
    {
        "id": "cmem-plugin-csvcombine",
        "name": "cmem-plugin-csvcombine",
        "description": "# cmem-plugin-csvcombine\n\nCombine CSV files with the same structure to one dataset.\n\nThis is a plugin for [eccenca](https://eccenca.com) [Corporate Memory](https://documentation.eccenca.com).\n\nYou can install it with the [cmemc](https://eccenca.com/go/cmemc) command line\nclients like this:\n\n```\ncmemc admin workspace python install cmem-plugin-csvcombine\n```\n\n",
        "latest_version": "2.0.0"
    },
    {
        "id": "cmem-plugin-currencies",
        "name": "cmem-plugin-currencies",
        "description": "# cmem-plugin-currencies\n\nConvert prices between currencies.\n\nThis is a plugin for [eccenca](https://eccenca.com) [Corporate Memory](https://documentation.eccenca.com).\n\nYou can install it with the [cmemc](https://eccenca.com/go/cmemc) command line\nclients like this:\n\n```\ncmemc admin workspace python install cmem-plugin-currencies\n```\n\n",
        "latest_version": "0.8.2"
    },
    {
        "id": "cmem-plugin-databus",
        "name": "cmem-plugin-databus",
        "description": "# cmem-plugin-databus\n\nLoad and publish datasets from a DBpedia databus service.\n\nThis is a plugin for [eccenca](https://eccenca.com) [Corporate Memory](https://documentation.eccenca.com).\n\nYou can install it with the [cmemc](https://eccenca.com/go/cmemc) command line\nclients like this:\n\n```\ncmemc admin workspace python install cmem-plugin-databus\n```\n\n",
        "latest_version": "1.0.1"
    },
    {
        "id": "cmem-plugin-examples",
        "name": "cmem-plugin-examples",
        "description": "# cmem-plugin-examples\n\nExample plugins for eccenca Corporate Memory.\n\nThis is a plugin for [eccenca](https://eccenca.com) [Corporate Memory](https://documentation.eccenca.com).\n\nYou can install it with the [cmemc](https://eccenca.com/go/cmemc) command line\nclients like this:\n\n```\ncmemc admin workspace python install cmem-plugin-examples\n```\n\n",
        "latest_version": "0.3.0"
    },
    {
        "id": "cmem-plugin-graphql",
        "name": "cmem-plugin-graphql",
        "description": "# cmem-plugin-graphql\n\nSend queries to a GraphQL endpoint and save the results in a JSON dataset.\n\n[![eccenca Corporate Memory][cmem-shield]][cmem-link]\n\nThis is a plugin for [eccenca](https://eccenca.com) [Corporate Memory](https://documentation.eccenca.com). You can install it with the [cmemc](https://eccenca.com/go/cmemc) command line clients like this:\n\n```\ncmemc admin workspace python install cmem-plugin-graphql\n```\n[![workflow](https://github.com/eccenca/cmem-plugin-graphql/actions/workflows/check.yml/badge.svg)](https://github.com/eccenca/cmem-plugin-graphql/actions) [![pypi version](https://img.shields.io/pypi/v/cmem-plugin-graphql)](https://pypi.org/project/cmem-plugin-graphql) [![license](https://img.shields.io/pypi/l/cmem-plugin-graphql)](https://pypi.org/project/cmem-plugin-graphql)\n[![poetry][poetry-shield]][poetry-link] [![ruff][ruff-shield]][ruff-link] [![mypy][mypy-shield]][mypy-link] [![copier][copier-shield]][copier] \n\n[cmem-link]: https://documentation.eccenca.com\n[cmem-shield]: https://img.shields.io/endpoint?url=https://dev.documentation.eccenca.com/badge.json\n[poetry-link]: https://python-poetry.org/\n[poetry-shield]: https://img.shields.io/endpoint?url=https://python-poetry.org/badge/v0.json\n[ruff-link]: https://docs.astral.sh/ruff/\n[ruff-shield]: https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/astral-sh/ruff/main/assets/badge/v2.json&label=Code%20Style\n[mypy-link]: https://mypy-lang.org/\n[mypy-shield]: https://www.mypy-lang.org/static/mypy_badge.svg\n[copier]: https://copier.readthedocs.io/\n[copier-shield]: https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/copier-org/copier/master/img/badge/badge-grayscale-inverted-border-purple.json\n\n",
        "latest_version": "4.0.0"
    },
    {
        "id": "cmem-plugin-irdi",
        "name": "cmem-plugin-irdi",
        "description": "# cmem-plugin-irdi\n\nCreate unique [ECLASS](https://eclass.eu/support/technical-specification/structure-and-elements/irdi) IRDIs\n\n\nThis is a plugin for [eccenca](https://eccenca.com) [Corporate Memory](https://documentation.eccenca.com).\n\nYou can install it with the [cmemc](https://eccenca.com/go/cmemc) command line\nclients like this:\n\n```\ncmemc admin workspace python install cmem-plugin-irdi\n```\n\n## Plugin Usage\n\n- All fields of the IRDI are configurable, minus `Item Code`, which is created by the plugin\n  - Created IRDIs are unique per configuration\n- Specify a graph that stores the state of `Item Codes`\n- Input and output paths are configurable\n  - if no input path is configured, values are read from the URIs of the input (Transformation Input)",
        "latest_version": "0.5.0"
    },
    {
        "id": "cmem-plugin-kafka",
        "name": "cmem-plugin-kafka",
        "description": "# cmem-plugin-kafka\n\nSend and receive messages from Apache Kafka.\n\nThis is a plugin for [eccenca](https://eccenca.com) [Corporate Memory](https://documentation.eccenca.com).\n\nYou can install it with the [cmemc](https://eccenca.com/go/cmemc) command line\nclients like this:\n\n```\ncmemc admin workspace python install cmem-plugin-kafka\n```\n\n## Plugin supported message format\n\n### XML dataset format\n\nAn example XML document is shown below. This document will be sent as two messages\nto the configured topic. Each message is created as a proper XML document.\n\n```xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<KafkaMessages>\n    <Message>\n        <PurchaseOrder OrderDate=\"1996-04-06\">\n            <ShipTo country=\"string\">\n                <name>string</name>\n                <street>string</street>\n                <city>string</city>\n                <state>string</state>\n                <zip>9200</zip>\n            </ShipTo>\n            <BillTo country=\"string\">\n                <name>string</name>\n                <street>string</street>\n                <city>string</city>\n                <state>string</state>\n                <zip>2381</zip>\n            </BillTo>\n        </PurchaseOrder>\n    </Message>\n    <Message key=\"1234\">\n        <SingleTagHere>\n            .\n            .\n            .\n        </SingleTagHere>\n    </Message>\n</KafkaMessages>\n```\nProducer plugin generates 2 messages with below content\n```xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<PurchaseOrder OrderDate=\"1996-04-06\">\n    <ShipTo country=\"string\">\n        <name>string</name>\n        <street>string</street>\n        <city>string</city>\n        <state>string</state>\n        <zip>9200</zip>\n    </ShipTo>\n    <BillTo country=\"string\">\n        <name>string</name>\n        <street>string</street>\n        <city>string</city>\n        <state>string</state>\n        <zip>2381</zip>\n    </BillTo>\n</PurchaseOrder>\n```\n```xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<SingleTagHere>\n            .\n            .\n            .\n</SingleTagHere>\n```\n### JSON Dataset format\n\nAn example JSON document is shown below. This document will be sent as two messages\nto the configured topic. Each message is created as a proper JSON document.\n\n```json\n[\n  {\n    \"message\": {\n      \"key\": \"818432-942813-832642-453478\",\n      \"headers\": {\n        \"type\": \"ADD\"\n      },\n      \"content\": {\n        \"location\": [\n          \"Leipzig\"\n        ],\n        \"obstacle\": {\n          \"name\": \"Iron Bars\",\n          \"order\": \"1\"\n        }\n      }\n    }\n  },\n  {\n    \"message\": {\n      \"key\": \"887428-119918-570674-866526\",\n      \"headers\": {\n        \"type\": \"REMOVE\"\n      },\n      \"content\": {\n        \"comments\": \"We can pass any json payload here.\"\n      }\n    }\n  }\n]\n```\nProducer plugin generates 2 messages with below content\n```json\n{\n  \"location\": [\n    \"Leipzig\"\n  ],\n  \"obstacle\": {\n    \"name\": \"Iron Bars\",\n    \"order\": \"1\"\n  }\n}\n```\n```json\n{\n  \"comments\": \"We can pass any json payload here.\"\n}\n```\n### Entities format\n\nRandom values plugin entities will generate below format JSON document.\n\n```json\n{\n  \"schema\": {\n    \"type_uri\": \"https://example.org/vocab/RandomValueRow\"\n  },\n  \"entity\": {\n    \"uri\": \"urn:uuid:3c68d8e7-bf17-4045-a9eb-c9c9813f717f\",\n    \"values\": {\n      \"<https://example.org/vocab/RandomValuePath0>\": [\n        \"a8o4Ocsb6RZClFRUZU3b2w\"\n      ],\n      \"<https://example.org/vocab/RandomValuePath1>\": [\n        \"RTICRU7JcTUVn94decelPg\"\n      ],\n      \"<https://example.org/vocab/RandomValuePath2>\": [\n        \"A9r-969NjAlX0DNWftxKoA\"\n      ],\n      \"<https://example.org/vocab/RandomValuePath3>\": [\n        \"FygWRy1UJ4-IzIim1qukJA\"\n      ],\n      \"<https://example.org/vocab/RandomValuePath4>\": [\n        \"AJcbn-LJEs-Dif96xu2eww\"\n      ]\n    }\n  }\n}\n```",
        "latest_version": "3.2.0"
    },
    {
        "id": "cmem-plugin-kaggle",
        "name": "cmem-plugin-kaggle",
        "description": "# cmem-plugin-kaggle\n\nImport dataset resources from [Kaggle](https://www.kaggle.com/).\n\n[![eccenca Corporate Memory][cmem-shield]][cmem-link]\n\nThis is a plugin for [eccenca](https://eccenca.com) [Corporate Memory](https://documentation.eccenca.com). You can install it with the [cmemc](https://eccenca.com/go/cmemc) command line clients like this:\n\n```\ncmemc admin workspace python install cmem-plugin-kaggle\n```\n[![workflow](https://github.com/eccenca/cmem-plugin-kaggle//actions/workflows/check.yml/badge.svg)](https://github.com/eccenca/cmem-plugin-kaggle//actions) [![pypi version](https://img.shields.io/pypi/v/cmem-plugin-kaggle)](https://pypi.org/project/cmem-plugin-kaggle) [![license](https://img.shields.io/pypi/l/cmem-plugin-kaggle)](https://pypi.org/project/cmem-plugin-kaggle)\n[![poetry][poetry-shield]][poetry-link] [![ruff][ruff-shield]][ruff-link] [![mypy][mypy-shield]][mypy-link] [![copier][copier-shield]][copier] \n\n[cmem-link]: https://documentation.eccenca.com\n[cmem-shield]: https://img.shields.io/endpoint?url=https://dev.documentation.eccenca.com/badge.json\n[poetry-link]: https://python-poetry.org/\n[poetry-shield]: https://img.shields.io/endpoint?url=https://python-poetry.org/badge/v0.json\n[ruff-link]: https://docs.astral.sh/ruff/\n[ruff-shield]: https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/astral-sh/ruff/main/assets/badge/v2.json&label=Code%20Style\n[mypy-link]: https://mypy-lang.org/\n[mypy-shield]: https://www.mypy-lang.org/static/mypy_badge.svg\n[copier]: https://copier.readthedocs.io/\n[copier-shield]: https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/copier-org/copier/master/img/badge/badge-grayscale-inverted-border-purple.json\n\n",
        "latest_version": "2.0.1"
    },
    {
        "id": "cmem-plugin-loopwf",
        "name": "cmem-plugin-loopwf",
        "description": "# cmem-plugin-loopwf\n\nLoop over the output of a task and start a sub-workflow for each entity.\n\nThis is a plugin for [eccenca](https://eccenca.com) [Corporate Memory](https://documentation.eccenca.com).\n\nYou can install it with the [cmemc](https://eccenca.com/go/cmemc) command line\nclients like this:\n\n```\ncmemc admin workspace python install cmem-plugin-loopwf\n```\n\n",
        "latest_version": "0.5.1"
    },
    {
        "id": "cmem-plugin-mattermost",
        "name": "cmem-plugin-mattermost",
        "description": "# cmem-plugin-mattermost\n\nSend messages to [Mattermost](https://mattermost.com/). channels and users.\n\nThis is a plugin for [eccenca](https://eccenca.com) [Corporate Memory](https://documentation.eccenca.com).\n\nYou can install it with the [cmemc](https://eccenca.com/go/cmemc) command line\nclients like this:\n\n```shell-session\ncmemc admin workspace python install cmem-plugin-mattermost\n```\n",
        "latest_version": "2.2.0"
    },
    {
        "id": "cmem-plugin-number-conversion",
        "name": "cmem-plugin-number-conversion",
        "description": "# cmem-plugin-number-conversion\n\nConvert numbers between binary, octal, decimal and hexadecimal representation.\n\nThis is a plugin for [eccenca](https://eccenca.com) [Corporate Memory](https://documentation.eccenca.com).\n\nYou can install it with the [cmemc](https://eccenca.com/go/cmemc) command line\nclients like this:\n\n```\ncmemc admin workspace python install cmem-plugin-number-conversion\n```\n\n",
        "latest_version": "0.6.0"
    },
    {
        "id": "cmem-plugin-parameters",
        "name": "cmem-plugin-parameters",
        "description": "# cmem-plugin-parameters\n\nSet or overwrite parameters of a task.\n\nThis is a plugin for [eccenca](https://eccenca.com) [Corporate Memory](https://documentation.eccenca.com).\n\nYou can install it with the [cmemc](https://eccenca.com/go/cmemc) command line\nclients like this:\n\n```\ncmemc admin workspace python install cmem-plugin-parameters\n```\n\n",
        "latest_version": "2.1.0"
    },
    {
        "id": "cmem-plugin-pyshacl",
        "name": "cmem-plugin-pyshacl",
        "description": "# cmem-plugin-pyshacl\n\nValidate your Knowledge Graphs based on tests generated from SHACL shapes.\n\n[![eccenca Corporate Memory][cmem-shield]][cmem-link]\n\nThis is a plugin for [eccenca](https://eccenca.com) [Corporate Memory](https://documentation.eccenca.com). You can install it with the [cmemc](https://eccenca.com/go/cmemc) command line clients like this:\n\n```\ncmemc admin workspace python install cmem-plugin-pyshacl\n```\n\n\n## Parameters\n\n### Data graph URI\n\nThe URI of the data graph to be validated. The graph URI is selected from a list of graphs of types:\n- `di:Dataset`\n- `dsm:ThesaurusProject`\n- `owl:Ontology`\n- `shui:ShapeCatalog`\n- `void:Dataset`\n\n### SHACL graph URI\n\nThe URI of the graph containing the SHACL shapes to be validated against. The graph URI is selected from a list of graphs of type `shui:ShapeCatalog`\n\n### Generate validation graph\n\nIf enabled, the validation graph is posted to the CMEM instance with the graph URI specified with the *validation graph URI* option. Default value: *false*\n\n### Validation graph URI\n\nIf the *generate validation graph* option is enabled the validation graph is posted to the CMEM instance with this graph URI\n\n### Output entities\n\nIf enabled, the plugin outputs the validation results and can be connected to, for instance, a CSV dataset to produce a results table. Default value: *false*\n\n### Clear validation graph\n\nIf enabled, the validation graph is cleared before workflow execution. Default value: *true*.\n\n## Advanced Options\n\n### Resolve owl:imports\n\nIf enabled, the graph tree defined with `owl:imports` in the data graph is resolved. Default value: *true*\n\n### Blank node skolemization\n\nIf enabled, blank nodes in the validation graph are skolemized into URIs. Default value: *true*\n\n### Add labels\n\nIf enabled, `rdfs:label` triples are added to the validation graph for instances of `sh:ValidationReport` and `sh:ValidationResult`. Default value: *true*\n\n### Add labels from data and SHACL graphs\n\nIf enabled along with the *add labels* option, `rdfs:label` triples are added for the focus nodes, values and SHACL shapes in the validation graph. The labels are taken from the specified data and SHACL graphs. Default value: *false*\n\n### Add shui:conforms flag to focus node resources\n\nIf enabled, `shui:conforms false` triples are added to the focus nodes in the validation graph. Default value: *false*\n\n### Meta-SHACL\n\nIf enabled, the SHACL shapes graph is validated against the SHACL-SHACL shapes graph before validating the data graph. Default value: *false*\n\n### Ontology graph URI\n\nThe URI of a graph containing extra ontological information. RDFS and OWL definitions from this are used to inoculate the data graph. The graph URI is selected from a list of graphs of type `owl:Ontology`\n\n### Inference\n\nIf enabled, OWL inferencing expansion of the data graph is performed before validation. Options are *RDFS*, *OWLRL*, *Both*, *None*. Default value: *None*\n\n### SHACL advanced features\n\nEnable SHACL Advanced Features. Default value: *false*.\n\n### SHACL-JS features\n\nEnable SHACL-JS features. Default value: *false*.\n\n### Remove graph type http://rdfs.org/ns/void#Dataset from data graph\n\nBefore validating, remove the triple `<data_graph_uri> a <http://rdfs.org/ns/void#Dataset>` from the in-memory data graph.\n\n### Remove graph type https://vocab.eccenca.com/dsm/ThesaurusProject from data graph\n\nBefore validating, remove the triple `<data_graph_uri> a <https://vocab.eccenca.com/dsm/ThesaurusProject>` from the in-memory data graph.\n\n### Remove graph type https://vocab.eccenca.com/shui/ShapeCatalog from data graph\n\nBefore validating, remove the triple `<data_graph_uri> a <https://vocab.eccenca.com/shui/ShapeCatalog>` from the in-memory data graph.\n\n### Maximum evaluation depth\n\nThe maximum number of SHACL shapes \"deep\" that the validator can go before reaching an \"endpoint\" constraint (1-999). Default value: 15\n\n\n## Parameter Input\n\nIn order to set options via the input the following parameter names can be used:\n\n| Option                                                                           | Name                            |\n|----------------------------------------------------------------------------------|---------------------------------|\n| Data graph URI                                                                   | data_graph_uri                  |\n| SHACL graph URI                                                                  | shacl_graph_uri                 |\n| Generate validation graph                                                        | generate_graph                  |\n| Validation graph URI                                                             | validation_graph_uri            |\n| Output entities                                                                  | output_entities                 |\n| Clear validation graph                                                           | clear_validation_graph          |\n| Resolve owl:imports                                                              | owl_imports                     |\n| Blank node skolemization                                                         | skolemize                       |\n| Add labels                                                                       | add_labels                      |\n| Add labels from data and SHACL graphs                                            | include_graphs_labels           |\n| Add shui:conforms flag to focus node resources                                   | add_shui_conforms               | \n| Meta-SHACL                                                                       | meta_shacl                      |\n| Ontology graph URI                                                               | ontology_graph_uri              |\n| Inference                                                                        | inference                       |\n| SHACL advanced features                                                          | advanced                        |\n| SHACl-JS features                                                                | js                              |\n| Remove graph type http://rdfs.org/ns/void#Dataset from data graph                | remove_dataset_graph_type       |\n| Remove graph type https://vocab.eccenca.com/dsm/ThesaurusProject from data graph | remove_thesaurus_graph_type     |\n| Remove graph type https://vocab.eccenca.com/shui/ShapeCatalog from data graph    | remove_shape_catalog_graph_type |\n| Maximum evaluation depth                                                         | max_evaluation_depth            |\n\n\n\n[![workflow](https://github.com/eccenca/cmem-plugin-pyshacl/actions/workflows/check.yml/badge.svg)](https://github.com/eccenca/cmem-plugin-pyshacl/actions) [![pypi version](https://img.shields.io/pypi/v/cmem-plugin-pyshacl)](https://pypi.org/project/cmem-plugin-pyshacl) [![license](https://img.shields.io/pypi/l/cmem-plugin-pyshacl)](https://pypi.org/project/cmem-plugin-pyshacl)\n[![poetry][poetry-shield]][poetry-link] [![ruff][ruff-shield]][ruff-link] [![mypy][mypy-shield]][mypy-link] [![copier][copier-shield]][copier] \n\n[cmem-link]: https://documentation.eccenca.com\n[cmem-shield]: https://img.shields.io/endpoint?url=https://dev.documentation.eccenca.com/badge.json\n[poetry-link]: https://python-poetry.org/\n[poetry-shield]: https://img.shields.io/endpoint?url=https://python-poetry.org/badge/v0.json\n[ruff-link]: https://docs.astral.sh/ruff/\n[ruff-shield]: https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/astral-sh/ruff/main/assets/badge/v2.json&label=Code%20Style\n[mypy-link]: https://mypy-lang.org/\n[mypy-shield]: https://www.mypy-lang.org/static/mypy_badge.svg\n[copier]: https://copier.readthedocs.io/\n[copier-shield]: https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/copier-org/copier/master/img/badge/badge-grayscale-inverted-border-purple.json\n\n",
        "latest_version": "5.1.0"
    },
    {
        "id": "cmem-plugin-python",
        "name": "cmem-plugin-python",
        "description": "# cmem-plugin-python\n\nWrite ad-hoc transformations and workflow tasks with Python.\n\n[![eccenca Corporate Memory][cmem-shield]][cmem-link]\n\nThis is a plugin for [eccenca](https://eccenca.com) [Corporate Memory](https://documentation.eccenca.com). You can install it with the [cmemc](https://eccenca.com/go/cmemc) command line clients like this:\n\n```\ncmemc admin workspace python install cmem-plugin-python\n```\n[![workflow](https://github.com/eccenca/cmem-plugin-python/actions/workflows/check.yml/badge.svg)](https://github.com/eccenca/cmem-plugin-python/actions) [![pypi version](https://img.shields.io/pypi/v/cmem-plugin-python)](https://pypi.org/project/cmem-plugin-python) [![license](https://img.shields.io/pypi/l/cmem-plugin-python)](https://pypi.org/project/cmem-plugin-python)\n[![poetry][poetry-shield]][poetry-link] [![ruff][ruff-shield]][ruff-link] [![mypy][mypy-shield]][mypy-link] [![copier][copier-shield]][copier] \n\n[cmem-link]: https://documentation.eccenca.com\n[cmem-shield]: https://img.shields.io/endpoint?url=https://dev.documentation.eccenca.com/badge.json\n[poetry-link]: https://python-poetry.org/\n[poetry-shield]: https://img.shields.io/endpoint?url=https://python-poetry.org/badge/v0.json\n[ruff-link]: https://docs.astral.sh/ruff/\n[ruff-shield]: https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/astral-sh/ruff/main/assets/badge/v2.json&label=Code%20Style\n[mypy-link]: https://mypy-lang.org/\n[mypy-shield]: https://www.mypy-lang.org/static/mypy_badge.svg\n[copier]: https://copier.readthedocs.io/\n[copier-shield]: https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/copier-org/copier/master/img/badge/badge-grayscale-inverted-border-purple.json\n\n",
        "latest_version": "1.1.0"
    },
    {
        "id": "cmem-plugin-reason",
        "name": "cmem-plugin-reason",
        "description": "# cmem-plugin-reason\n\nPerform reasoning tasks and validate OWL consistency.\n\n\n[![eccenca Corporate Memory][cmem-shield]][cmem-link]\n\n\nThis is a plugin for [eccenca](https://eccenca.com) [Corporate Memory](https://documentation.eccenca.com). You can install it with the [cmemc](https://eccenca.com/go/cmemc) command line clients like this:\n\n```\n\u279c cmemc admin workspace python install cmem-plugin-reason\n```\n[![workflow](https://github.com/eccenca/cmem-plugin-reason/actions/workflows/check.yml/badge.svg)](https://github.com/eccenca/cmem-plugin-reason/actions) [![pypi version](https://img.shields.io/pypi/v/cmem-plugin-reason)](https://pypi.org/project/cmem-plugin-reason) [![license](https://img.shields.io/pypi/l/cmem-plugin-reason)](https://pypi.org/project/cmem-plugin-reason)\n[![poetry][poetry-shield]][poetry-link] [![ruff][ruff-shield]][ruff-link] [![mypy][mypy-shield]][mypy-link] [![copier][copier-shield]][copier] \n\n[cmem-link]: https://documentation.eccenca.com\n[cmem-shield]: https://img.shields.io/endpoint?url=https://dev.documentation.eccenca.com/badge.json\n[poetry-link]: https://python-poetry.org/\n[poetry-shield]: https://img.shields.io/endpoint?url=https://python-poetry.org/badge/v0.json\n[ruff-link]: https://docs.astral.sh/ruff/\n[ruff-shield]: https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/astral-sh/ruff/main/assets/badge/v2.json&label=Code%20Style\n[mypy-link]: https://mypy-lang.org/\n[mypy-shield]: https://www.mypy-lang.org/static/mypy_badge.svg\n[copier]: https://copier.readthedocs.io/\n[copier-shield]: https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/copier-org/copier/master/img/badge/badge-grayscale-inverted-border-purple.json\n\nROBOT is published under the [BSD 3-Clause \"New\" or \"Revised\" License](https://choosealicense.com/licenses/bsd-3-clause/).\nCopyright \u00a9 2015, the authors. All rights reserved.",
        "latest_version": "2.0.0"
    },
    {
        "id": "cmem-plugin-salesforce",
        "name": "cmem-plugin-salesforce",
        "description": "# cmem-plugin-salesforce\n\nSend or receive data from your organization\u00b4s Salesforce account.\n\nThis is a plugin for [eccenca](https://eccenca.com) [Corporate Memory](https://documentation.eccenca.com).\n\nYou can install it with the [cmemc](https://eccenca.com/go/cmemc) command line\nclients like this:\n\n```\ncmemc admin workspace python install cmem-plugin-salesforce\n```\n\n",
        "latest_version": "2.0.0"
    },
    {
        "id": "cmem-plugin-semspect",
        "name": "cmem-plugin-semspect",
        "description": "# cmem-plugin-semspect\n\nUpdate Knowledge Graphs for visualisation in derivo SemSpect RDF.\n\nThis is a plugin for [eccenca](https://eccenca.com) [Corporate Memory](https://documentation.eccenca.com).\n\nYou can install it with the [cmemc](https://eccenca.com/go/cmemc) command line\nclients like this:\n\n```\ncmemc admin workspace python install cmem-plugin-semspect\n```\n\n",
        "latest_version": "0.7.0"
    },
    {
        "id": "cmem-plugin-shapes",
        "name": "cmem-plugin-shapes",
        "description": "# cmem-plugin-shapes\n\nGenerate SHACL node and property shapes from a data graph.\n\n[![eccenca Corporate Memory][cmem-shield]][cmem-link]\n\n\nYou can install it with the [cmemc](https://eccenca.com/go/cmemc) command line\nclients with:\n\n```\ncmemc admin workspace python install cmem-plugin-shapes\n```\n\n\n[![workflow](https://github.com/eccenca/cmem-plugin-shapes/actions/workflows/check.yml/badge.svg)](https://github.com/eccenca/cmem-plugin-shapes/actions) [![pypi version](https://img.shields.io/pypi/v/cmem-plugin-shapes)](https://pypi.org/project/cmem-plugin-shapes) [![license](https://img.shields.io/pypi/l/cmem-plugin-shapes)](https://pypi.org/project/cmem-plugin-shapes)\n\n[![poetry][poetry-shield]][poetry-link] [![ruff][ruff-shield]][ruff-link] [![mypy][mypy-shield]][mypy-link] [![copier][copier-shield]][copier] \n\n[cmem-link]: https://documentation.eccenca.com\n[cmem-shield]: https://img.shields.io/endpoint?url=https://dev.documentation.eccenca.com/badge.json\n[poetry-link]: https://python-poetry.org/\n[poetry-shield]: https://img.shields.io/endpoint?url=https://python-poetry.org/badge/v0.json\n[ruff-link]: https://docs.astral.sh/ruff/\n[ruff-shield]: https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/astral-sh/ruff/main/assets/badge/v2.json&label=Code%20Style\n[mypy-link]: https://mypy-lang.org/\n[mypy-shield]: https://www.mypy-lang.org/static/mypy_badge.svg\n[copier]: https://copier.readthedocs.io/\n[copier-shield]: https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/copier-org/copier/master/img/badge/badge-grayscale-inverted-border-purple.json\n\n\n",
        "latest_version": "1.0.0b2"
    },
    {
        "id": "cmem-plugin-sparql-anything",
        "name": "cmem-plugin-sparql-anything",
        "description": "# cmem-plugin-sparql-anything\n\nQuery anything with SPARQL to construct Knowledge Graphs.\n\nThis is a plugin for [eccenca](https://eccenca.com) [Corporate Memory](https://documentation.eccenca.com). You can install it with the [cmemc](https://eccenca.com/go/cmemc) command line clients like this:\n\n```\ncmemc admin workspace python install cmem-plugin-sparql-anything\n```\n[![workflow](https://github.com/eccenca/cmem-plugin-sparql-anything/actions/workflows/check.yml/badge.svg)](https://github.com/eccenca/cmem-plugin-sparql-anything/actions) [![pypi version](https://img.shields.io/pypi/v/cmem-plugin-sparql-anything)](https://pypi.org/project/cmem-plugin-sparql-anything) [![license](https://img.shields.io/pypi/l/cmem-plugin-sparql-anything)](https://pypi.org/project/cmem-plugin-sparql-anything)\n[![poetry][poetry-shield]][poetry-link] [![ruff][ruff-shield]][ruff-link] [![mypy][mypy-shield]][mypy-link] [![copier][copier-shield]][copier] \n\n[cmem-link]: https://documentation.eccenca.com\n[cmem-shield]: https://img.shields.io/endpoint?url=https://dev.documentation.eccenca.com/badge.json\n[poetry-link]: https://python-poetry.org/\n[poetry-shield]: https://img.shields.io/endpoint?url=https://python-poetry.org/badge/v0.json\n[ruff-link]: https://docs.astral.sh/ruff/\n[ruff-shield]: https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/astral-sh/ruff/main/assets/badge/v2.json&label=Code%20Style\n[mypy-link]: https://mypy-lang.org/\n[mypy-shield]: https://www.mypy-lang.org/static/mypy_badge.svg\n[copier]: https://copier.readthedocs.io/\n[copier-shield]: https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/copier-org/copier/master/img/badge/badge-grayscale-inverted-border-purple.json\n\n",
        "latest_version": "0.5.0"
    },
    {
        "id": "cmem-plugin-splitfile",
        "name": "cmem-plugin-splitfile",
        "description": "# cmem-plugin-splitfile\n\nSplit a text file into parts with a specified size.\n\n[![eccenca Corporate Memory][cmem-shield]][cmem-link]\n\nThis is a plugin for [eccenca](https://eccenca.com) [Corporate Memory](https://documentation.eccenca.com). You can install it with the [cmemc](https://eccenca.com/go/cmemc) command line clients like this:\n\n```\ncmemc admin workspace python install cmem-plugin-splitfile\n```\n\n## Parameters\n\n### Input filename\n\nThe input file to be split.  \n_Example:_ An input file with the name _input.nt_ will be split into files with the names _input\\_000000001.nt_,\n_input\\_000000002.nt_,   _input\\_000000003.nt_, etc.  \n\u26a0\ufe0f Existing files will be overwritten!\n\n### Chunk size\n\nThe maximum size of the chunk files.\n\n### Size unit\n\nThe unit of the size value: kilobyte (KB), megabyte (MB), gigabyte (GB), or number of lines (Lines).\n\n### Include header\n\nInclude the header in each split. The first line of the input file is treated as the header.\n\n### Delete input file\n\nDelete the input file after splitting.\n\n### Use internal projects directory\n\nUse the internal projects directory of DataIntegration to fetch and store files, instead of using the API.\nIf enabled, the \"Internal projects directory\" parameter has to be set.\n\n### Internal projects directory\n\nThe path to the internal projects directory. If \"Use internal projects directory\" is disabled,\nthis parameter has no effect.\n\n\n[![poetry][poetry-shield]][poetry-link] [![ruff][ruff-shield]][ruff-link] [![mypy][mypy-shield]][mypy-link] [![copier][copier-shield]][copier] \n\n[cmem-link]: https://documentation.eccenca.com\n[cmem-shield]: https://img.shields.io/endpoint?url=https://dev.documentation.eccenca.com/badge.json\n[poetry-link]: https://python-poetry.org/\n[poetry-shield]: https://img.shields.io/endpoint?url=https://python-poetry.org/badge/v0.json\n[ruff-link]: https://docs.astral.sh/ruff/\n[ruff-shield]: https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/astral-sh/ruff/main/assets/badge/v2.json&label=Code%20Style\n[mypy-link]: https://mypy-lang.org/\n[mypy-shield]: https://www.mypy-lang.org/static/mypy_badge.svg\n[copier]: https://copier.readthedocs.io/\n[copier-shield]: https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/copier-org/copier/master/img/badge/badge-grayscale-inverted-border-purple.json\n\n",
        "latest_version": "1.0.0"
    },
    {
        "id": "cmem-plugin-ulid",
        "name": "cmem-plugin-ulid",
        "description": "# cmem-plugin-ulid\n\nCreate ULID's(Universally Unique Lexicographically Sortable Identifier) in transformations\n\nThis is a plugin for [eccenca](https://eccenca.com) [Corporate Memory](https://documentation.eccenca.com).\n\nYou can install it with the [cmemc](https://eccenca.com/go/cmemc) command line\nclients like this:\n\n```\ncmemc admin workspace python install cmem-plugin-ulid\n```\n\n",
        "latest_version": "1.0.1"
    },
    {
        "id": "cmem-plugin-uuid",
        "name": "cmem-plugin-uuid",
        "description": "# cmem-plugin-uuid\n\nCreate universally unique identifiers (UUIDs) versions 1, 3, 4, 5, 6, 7 and 8 in transformations.\n\n## Installation\n\n`cmemc -c my-cmem admin workspace python install cmem-plugin-uuid`\n\n## UUID1\n\nUUID1 version is generated from a host ID, sequence number, and the current time.\n\n### Parameters\n\n#### Node\n\nNode value in the form \"01:23:45:67:89:AB\", \"01-23-45-67-89-AB\", or \"0123456789AB\".\nIf not given, [`uuid.getnode()`](https://docs.python.org/3/library/uuid.html#uuid.getnode) is used to \nattempt to obtain the hardware address. If this is unsuccessful a random 48-bit number is chosen.\n\nDefault value: _None_  \nID: `node`\n\n#### Clock sequence\n\nIf clock sequence is given, it is used as the sequence number, otherwise a random 14-bit sequence number is chosen.\n\nDefault value: _None_  \nID: `clock_seq`\n\n<br>\n\n## UUID3\n\nUUID version 3 is a reproducible UUID based on the MD5 hash of a namespace identifier (which is a UUID) and a name\n(which is a string).\n\n\n### Parameters\n\n#### Namespace\n\nThe namespace can be entered manually or selected from the namespace UUIDs defined in\n[RFC 4122](https://www.rfc-editor.org/rfc/rfc4122):\n\n- Namespace DNS: 6ba7b810-9dad-11d1-80b4-00c04fd430c8 (*namespace_dns*)\n- Namespace URL: 6ba7b811-9dad-11d1-80b4-00c04fd430c8 (*namespace_url*)\n- Namespace OID: 6ba7b812-9dad-11d1-80b4-00c04fd430c8 (*namespace_oid*)\n- Namespace X500: 6ba7b814-9dad-11d1-80b4-00c04fd430c8 (*namespace_x500*)\n\nIf none of the predefined namespace UUIDs is selected, the input namespace is either directly\ninterpreted as a UUID, or used to derive a UUID (see parameter _Namespace as UUID_). If no namespace is given,\nthe output is the same as that of the standard CMEM UUID operator with input value.\n\nDefault value: _none_  \nID: `namespace`\n\n#### Use input as namespace\n\nIf enabled, the input value is used for the namespace.\n\nDefault value: _False_  \nID: `input_as_namespace`\n\n#### Namespace as UUID\n\nApplies only if none of the pre-defined namespaces is selected. If enabled, the namespace string\nneeds to be a valid UUID. Otherwise, the namespace UUID is a UUIDv1 derived from the MD5 \nhash of the namespace string.\n\nDefault value: _False_  \nID: `namespace_as_uuid`\n\n<br>\n\n\n## UUID4\n\nUUID version 4 specifies a random UUID. This plugin is equivalent to the standard CMEM UUID operator without input value.\n\n<br>\n\n\n## UUID5\n\nUUID version 5 is a reproducible UUID based on the SHA1 hash of a namespace identifier (which is a UUID) and a\nname (which is a string).\n\n### Parameters\n\n#### Namespace\n\nThe namespace can be entered manually or selected from the namespace UUIDs defined in\n[RFC 4122](https://www.rfc-editor.org/rfc/rfc4122):\n\n- Namespace DNS: 6ba7b810-9dad-11d1-80b4-00c04fd430c8 (*namespace_dns*)\n- Namespace URL: 6ba7b811-9dad-11d1-80b4-00c04fd430c8 (*namespace_url*)\n- Namespace OID: 6ba7b812-9dad-11d1-80b4-00c04fd430c8 (*namespace_oid*)\n- Namespace X500: 6ba7b814-9dad-11d1-80b4-00c04fd430c8 (*namespace_x500*)\n\nIf none of the predefined namespace UUIDs is selected, the input namespace is either directly\ninterpreted as a UUID, or used to derive a UUID (see parameter _Namespace as UUID_).\n\nDefault value: _none_  \nID: `namespace`\n\n#### Namespace as UUID\n\nApplies only if none of the pre-defined namespaces is selected. If enabled, the namespace string\nneeds to be a valid UUID. Otherwise, the namespace UUID is a UUIDv1 derived from the SHA1 \nhash of the namespace string.\n\nDefault value: _False_  \nID: `namespace_as_uuid`\n\n<br>\n\n## UUID6\n\nUUID6 version is generated from a host ID, sequence number, and the current time.\nUUID version 6 is a field-compatible version of UUIDv1, reordered for improved DB locality. \n\n### Parameters\n\n#### Node\n\nNode value in the form \"01:23:45:67:89:AB\", \"01-23-45-67-89-AB\", or \"0123456789AB\".\nIf not given, a random 48-bit sequence number is chosen.\n\nDefault value: _None_  \nID: `node`\n\n#### Clock sequence\n\nIf clock sequence is given, it is used as the sequence number, otherwise a random 14-bit number is chosen.\n\nDefault value: _None_  \nID: `clock_seq`\n\n<br>\n\n## UUID7\n\nUUID version 7 features a time-ordered value field derived from the\nwidely implemented and well known Unix Epoch timestamp source, the\nnumber of milliseconds since midnight 1 Jan 1970 UTC, leap seconds\nexcluded, as well as improved entropy characteristics over versions\n1 or 6.\n\n<br>\n\n## UUID8\n\nUUID version 8 features a time-ordered value field derived from the\nwidely implemented and well known Unix Epoch timestamp source, the\nnumber of nanoseconds since midnight 1 Jan 1970 UTC, leap seconds\nexcluded.\n\n<br>\n\n## UUID1 to UUID6\n\nGenerate a UUID version 6 from a UUID version 1. The input needs to be a valid UUIDv1\nhexdecimal string.\n\n<br>\n\n## UUID Version\n\nOutputs the UUID version from a UUID input string.\n\n<br>\n\n## UUID Convert\n\nConvert a UUID from one format to another. The plugin accepts strings in the correct format, however, the log will show\na warning if the input does not comply with the standard specified in [RFC 4122](https://www.rfc-editor.org/rfc/rfc4122) and the \n[proposed updates](https://www.ietf.org/archive/id/draft-peabody-dispatch-new-uuid-format-01.html).\n\n### Parameters\n\n#### From\n\nThe input format\n\nOptions:\n\n- **UUID/32-character hexadecimal string** (*uuid_hex*):\n\n  A standard UUID or a UUID as a 32-character lowercase hexadecimal string.\n- **128-bit integer** (_int_):\n\n  The UUID as a 128-bit integer.\n- **URN** (_urn_):\n\n  The UUID as a URN.\n\nDefault value: _UUID/32-character lowercase hexadecimal string_   \nID: `from_format`\n\n#### To\n\nThe output format\n\nOptions:\n\n- **UUID** (_uuid_):\n\n  A standard UUID.\n- **32-character lowercase hexadecimal string** (_hex_):\n\n  The UUID as a 32-character lowercase hexadecimal string.\n- **128-bit integer** (_int_):\n\n  The UUID as a 128-bit integer.\n- **URN** (_urn_):\n\n  The UUID as a URN as specified in [RFC 4122](https://www.rfc-editor.org/rfc/rfc4122).\n\nDefault value: _32-character lowercase hexadecimal string_  \nID: `to_format`\n",
        "latest_version": "1.0.0"
    },
    {
        "id": "cmem-plugin-validation",
        "name": "cmem-plugin-validation",
        "description": "# cmem-plugin-validation\n\nValidate graph and data structures.\n\n[![eccenca Corporate Memory][cmem-shield]][cmem-link]\n\nThis is a plugin for [eccenca](https://eccenca.com) [Corporate Memory](https://documentation.eccenca.com). You can install it with the [cmemc](https://eccenca.com/go/cmemc) command line clients like this:\n\n```\ncmemc admin workspace python install cmem-plugin-validation\n```\n[![workflow](https://github.com/eccenca/cmem-plugin-validation/actions/workflows/check.yml/badge.svg)](https://github.com/eccenca/cmem-plugin-validation/actions) [![pypi version](https://img.shields.io/pypi/v/cmem-plugin-validation)](https://pypi.org/project/cmem-plugin-validation) [![license](https://img.shields.io/pypi/l/cmem-plugin-validation)](https://pypi.org/project/cmem-plugin-validation)\n[![poetry][poetry-shield]][poetry-link] [![ruff][ruff-shield]][ruff-link] [![mypy][mypy-shield]][mypy-link] [![copier][copier-shield]][copier] \n\n[cmem-link]: https://documentation.eccenca.com\n[cmem-shield]: https://img.shields.io/endpoint?url=https://dev.documentation.eccenca.com/badge.json\n[poetry-link]: https://python-poetry.org/\n[poetry-shield]: https://img.shields.io/endpoint?url=https://python-poetry.org/badge/v0.json\n[ruff-link]: https://docs.astral.sh/ruff/\n[ruff-shield]: https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/astral-sh/ruff/main/assets/badge/v2.json&label=Code%20Style\n[mypy-link]: https://mypy-lang.org/\n[mypy-shield]: https://www.mypy-lang.org/static/mypy_badge.svg\n[copier]: https://copier.readthedocs.io/\n[copier-shield]: https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/copier-org/copier/master/img/badge/badge-grayscale-inverted-border-purple.json\n\n",
        "latest_version": "1.1.1"
    },
    {
        "id": "cmem-plugin-yaml",
        "name": "cmem-plugin-yaml",
        "description": "# cmem-plugin-yaml\n\nLoad and parse YAML documents.\n\nThis is a plugin for [eccenca](https://eccenca.com) [Corporate Memory](https://documentation.eccenca.com).\n\nYou can install it with the [cmemc](https://eccenca.com/go/cmemc) command line\nclients like this:\n\n```\ncmemc admin workspace python install cmem-plugin-yaml\n```\n\n",
        "latest_version": "0.8.0"
    }
]